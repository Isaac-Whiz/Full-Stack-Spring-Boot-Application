name: CD - Deploy React Frontend

on:
  workflow_dispatch:
    push:
      branches:
        - main
      paths:
        - frontend/react/**
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/react

    steps:
      - uses: actions/checkout@v4
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text":"https://github.com/Isaac-Whiz/Full-Stack-Spring-Boot-Application/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send slack message
        run: > 
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": "Deployment started :progress_bar: :fingerscrossed"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Docker build and push
        run: |
          chmod +x ../../.ci/build-publish.sh
          USERNAME=isaacwhiz \
          REPO=whiz-react15 \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \
          ../../.ci/build-publish.sh . \
            --build-arg api_base_url=http://api_base_url=http://super-stack-env.eba-kzu9x2dn.af-south-1.elasticbeanstalk.com:3000
      - name: Send slack message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": ":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to  docker hub"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Update Dockerrun.aws.json react image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../../Dockerrun.aws.json
          sed -i -E 's_(isaacwhiz/whiz-react15:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating the tag"
          cat ../..Dockerrun.aws.json
      - name: Send slack message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": ":aws: Starting deployment to Elastic Beanstalk"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.EB_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 120
      - name: Send slack message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": ":githubloading: Committing to repo https://github.com/Isaac-Whiz/Full-Stack-Spring-Boot-Application/commit/${{ github.sha}}"'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../..Dockerrun.aws.json
          git commit -m "Updated the Dockerrun.aws.json file with a new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push
      - name: Send slack message
        run: >
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": ":party_blob: :github-check-mark: Deployment completed"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Send a slack message
        if: always()
        run: > 
          curl -X POST -H 'Content-type: application/json'
          --data '{"text": "Job status: $${{ job.status }}"}'
          ${{ secrets.SLACK_WEBHOOK_URL }}



